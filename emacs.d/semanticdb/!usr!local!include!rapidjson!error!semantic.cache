;; Object error/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "error/"
  :tables (list 
   (semanticdb-table "error.h"
    :major-mode 'c-mode
    :tags 
        '( ("RAPIDJSON_ERROR_ERROR_H__" variable (:constant-flag t) nil [758 783])
            ("RAPIDJSON_ERROR_CHARTYPE" variable (:constant-flag t) nil [1240 1264])
            ("RAPIDJSON_ERROR_STRING" variable (:constant-flag t) nil [1694 1716])
            ("ParseErrorCode" type
               (:members 
                  ( ("kParseErrorNone" variable
                       (:constant-flag t
                        :default-value (2024 2025)
                        :type "int")
                        (reparse-symbol enumsubparts) [2006 2025])
                    ("kParseErrorDocumentEmpty" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2070 2095])
                    ("kParseErrorDocumentRootNotSingular" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2146 2181])
                    ("kParseErrorValueInvalid" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2251 2275])
                    ("kParseErrorObjectMissName" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2320 2346])
                    ("kParseErrorObjectMissColon" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2407 2434])
                    ("kParseErrorObjectMissCommaOrCurlyBracket" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2507 2548])
                    ("kParseErrorArrayMissCommaOrSquareBracket" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2608 2649])
                    ("kParseErrorStringUnicodeEscapeInvalidHex" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2709 2750])
                    ("kParseErrorStringUnicodeSurrogateInvalid" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2810 2851])
                    ("kParseErrorStringEscapeInvalid" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2904 2935])
                    ("kParseErrorStringMissQuotationMark" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [2993 3028])
                    ("kParseErrorStringInvalidEncoding" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3090 3123])
                    ("kParseErrorNumberTooBig" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3172 3196])
                    ("kParseErrorNumberMissFraction" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3264 3294])
                    ("kParseErrorNumberMissExponent" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3347 3377])
                    ("kParseErrorTermination" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3426 3449])
                    ("kParseErrorUnspecificSyntaxError" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [3503 3578]))                  
                :type "enum")
                nil [1980 3579])
            ("ParseResult" type
               (:members 
                  ( ("ParseResult" function
                       (:constructor-flag t
                        :type ("ParseResult" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [4052 4105])
                    ("ParseResult" function
                       (:constructor-flag t
                        :arguments 
                          ( ("code" variable (:type ("ParseErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4159 4179])
                            ("offset" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4180 4194]))                          
                        :type ("ParseResult" type (:type "struct") nil nil))
                        (reparse-symbol classsubparts) [4147 4228])
                    ("Code" function (:type ("ParseErrorCode" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4262 4307])
                    ("Offset" function (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4374 4415])
                    ("IsError" function (:type "bool") (reparse-symbol classsubparts) [4579 4636])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("that" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ParseResult" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4658 4682]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4642 4720])
                    ("==" function
                       (:operator-flag t
                        :arguments 
                          ( ("code" variable (:type ("ParseErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4741 4761]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4725 4793])
                    ("==" function
                       (:operator-flag t
                        :typemodifiers ("friend")
                        :arguments 
                          ( ("code" variable (:type ("ParseErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4821 4841])
                            ("err" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ParseResult" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4842 4866]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [4798 4896])
                    ("Clear" function (:type "void") (reparse-symbol classsubparts) [4928 4966])
                    ("Set" function
                       (:arguments 
                          ( ("code" variable (:type ("ParseErrorCode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5018 5038])
                            ("offset" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5039 5054]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5009 5093])
                    ("private" label nil (reparse-symbol classsubparts) [5095 5103])
                    ("code_" variable (:type ("ParseErrorCode" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5108 5129])
                    ("offset_" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5134 5149]))                  
                :type "struct")
                nil [3987 5152])
            ("GetParseErrorFunc" variable
               (:functionpointer-flag t
                :type "char")
                nil [5546 5615]))          
    :file "error.h"
    :pointmax 5678
    :fsize 5677
    :lastmodtime '(21816 37134 0 0)
    :unmatched-syntax '((symbol 5617 . 5640) (TYPEDEF 5538 . 5545) (number 5055 . 5056) (punctuation 5053 . 5054) (semantic-list 4512 . 4534) (CONST 4506 . 4511) (semantic-list 4503 . 4505) (BOOL 4499 . 4503) (OPERATOR 4490 . 4498) (symbol 1730 . 1755))
    :lexical-table 
        '(("RAPIDJSON_ERROR_STRING" (spp-arg-list ("x") 1716 . 1719) . ((symbol "x" 1720 . 1721)))
          ("RAPIDJSON_ERROR_ERROR_H__")
          ("RAPIDJSON_ERROR_CHARTYPE" . ((CHAR "char" 1265 . 1269)))
          )

    )
   )
  :file "!usr!local!include!rapidjson!error!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
